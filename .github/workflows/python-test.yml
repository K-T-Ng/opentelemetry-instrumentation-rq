# This workflow will build Python Package and run end-to-end testing for simulate real world cases

name: End-to-end Testing

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Install package
        run: |
          TAR_FILE=$(ls dist/ | grep tar)
          pip install dist/$TAR_FILE
          pip install -r dev-requirements.txt
      - name: Launch Redis, OpenTelemetry Collector and Jaeger
        run: |
          docker compose -f tests/e2e_test/env_setup/docker-compose.yaml up -d --wait
      - name: Run tests
        run: |
          python -m tests.e2e_test.simulator.worker &
          WORKER_PID=$!
          echo "WORKER_PID=$!" >> $GITHUB_ENV
          pytest --cov=opentelemetry_instrumentation_rq tests/e2e_test
      - name: Shutdown Worker, Redis, OpenTelemetry Collector and Jaeger
        if: ${{ always() }}
        run: |
          docker compose -f tests/e2e_test/env_setup/docker-compose.yaml down --remove-orphans
          kill $WORKER_PID
